---
title: "analyse_glm"
format:
  html:
    number-sections: true
    embed-resources: true
editor: visual
---

## Bibliothèques, chemins, chargement des données

```{r}
# Bibliothèques
#| warning: false
library(here)
library(data.table)
library(DT)
library(dplyr)
library(ggplot2)

library(car)
library(MASS)
library(DHARMa)

library(gtsummary)
library(gt)
library(broom)
library(flextable)

# Chemins
read_folder <- here("data/04_aggregate_by_grid")
gisdata_folder <- here("data/gis")
fig_folder <- here("figures/rapport_stage_M1_TMP")

# Chargement des données
grille_data <- readRDS(file.path(read_folder, "dat_aggregated_10000.rds"))
```

```{r}
# Visualiser les données observées
#| eval: false
dim(grille_data)
str(grille_data)
summary(grille_data)
head(grille_data)
```

# GLM : Régression de Poisson de type régression linéaire

Dans cette analyse, nous allons étudier la relation entre la variable réponse "nobs" (nombre d'observations) et les variables explicatives "popdensity_hab_per_km2" (densité moyenne de population), "elevation_m" (altitude moyenne) et "main_clc" (classe d'utilisation du sol majoritaire).

## Visualisation des relations

```{r}
# Densité de population vs nobs
ggplot(grille_data, aes(x = popdensity_hab_per_km2, y = nobs)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, color = "blue") +
  labs(title = "Relation entre densité de population et nombre d'observations",
       x = "Densité de population (hab/km²)", y = "Nombre d'observations")
ggplot(grille_data, aes(x = log10(popdensity_hab_per_km2), y = nobs)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, color = "blue") +
  labs(title = "Relation entre densité de population et nombre d'observations",
       x = "log10(Densité de population)", y = "Nombre d'observations")
# Altitude vs nobs
ggplot(grille_data, aes(x = elevation_m, y = nobs)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, color = "darkgreen") +
  labs(title = "Relation entre altitude et nombre d'observations",
       x = "Altitude moyenne (m)", y = "Nombre d'observations")
ggplot(grille_data, aes(x = log10(elevation_m), y = nobs)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, color = "darkgreen") +
  labs(title = "Relation entre altitude et nombre d'observations",
       x = "log10(Altitude moyenne)", y = "Nombre d'observations")
# nobs selon la classe d'occupation du sol majoritaire
ggplot(grille_data, aes(x = main_clc, y = nobs)) +
  geom_boxplot(fill = "orange") +
  labs(title = "Nombre d'observations selon l'occupation du sol",
       x = "Classe d'occupation du sol", y = "Nombre d'observations") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Convertir la variable catégorielle clc en facteur

```{r}
# Convertir en facteur
grille_data$main_clc <- as.factor(grille_data$main_clc)
# Définir la modalité de référence = CLC_aquatic
grille_data$main_clc <- relevel(grille_data$main_clc, ref = "CLC_aquatic")
levels(grille_data$main_clc)
```

On définit CLC_aquatic comme modalité de référence puisqu'on considère que c'est le milieu le plus propice aux odonates.

## Ajustement du modèle de régression linéaire de Poisson

```{r}
mod.pois <- glm(nobs ~ popdensity_hab_per_km2 + elevation_m + main_clc, family = "poisson", data = grille_data)
```

## Evaluation des hypothèses de la régression de Poisson

### 1 : Indépendance des réponses : les observations sont indépendantes, cette hypothèse est validée.

### 2 : Distribution des réponses selon une loi de Poisson

Pour vérifier cette hypothèse, on va comparer la distribution des valeurs observées de nobs avec leur distribution théorique selon la loi de Poisson de paramètre Lambda (estimé par la moyenne de nobs).

```{r}
# Moyenne des comptages observés
mean(grille_data$nobs)
# Simulation d’une distribution de Poisson théorique
set.seed(1234)
theoretic_count <- rpois(n = nrow(grille_data), lambda = mean(grille_data$nobs))
tc_df <- data.frame(theoretic_count)
# Comparaison visuelle des distributions
ggplot(grille_data, aes(x = nobs)) +
  geom_bar(fill = "#1E90FF") +
  geom_bar(data = tc_df, aes(x = theoretic_count), fill = "red", alpha = 0.5) +
  theme_classic() +
  labs(title = "Comparaison des distributions observée et théorique (Poisson)",
       x = "Nombre d'observations (nobs)",
       y = "Fréquence") +
  scale_x_continuous(limits = c(0, 3000)) +
  theme(legend.position = "none")
```

On voit que les 2 distributions sont très différentes, nobs ne suit pas une loi de Poisson de paramètre lambda = 275.2578 On peut également voir une sur-représentation des valeurs zéro dans les comptages observés ; il est donc très probable qu’une surdispersion soit mise en évidence.

### Evaluation de la surdispersion

```{r}
summary(mod.pois)
summary(mod.pois)$deviance / summary(mod.pois)$df.residual
```

Le ratio residual deviance / ddl est égal à 468.8812. Ce ratio est très largement supérieur à 1 et permet de mettre en évidence la présence d’une surdispersion massive. Le modèle de Poisson est fortement biaisé, il est donc nécessaire d’utiliser une autre structure d’erreur dans le modèle de régression.

## Ajustement du modèle à une structure d'erreur différente

### Structure d'erreur quasi-poisson

```{r}
mod.quasipois <- glm(nobs ~ popdensity_hab_per_km2 + elevation_m + main_clc, family = quasipoisson, data = grille_data)
summary(mod.quasipois)
```

Les estimateurs sont identiques à ceux du modèle de Poisson, les erreurs standards sont plus grandes, le paramètre de dispersion estimé a augmenté (de 1 à 1137.969, il est énorme ça confirme une forte surdispersion), le modèle corrige les erreurs standards mais ne modifie pas les estimations.

### Structure d'erreur binomiale négative

```{r}
grille_data$popdensity <- grille_data$popdensity_hab_per_km2 / 500
grille_data$elevation <- grille_data$elevation_m / 500
```


```{r}
mod.nb <- glm.nb(nobs ~ popdensity + elevation + main_clc, data = grille_data)
summary(mod.nb)
summary(mod.nb)$deviance / summary(mod.nb)$df.residual
```

L'indice theta = 0.6974 confirme encore une fois une forte surdispersion. Le modèle donne des estimations légèrement différentes, il fournit un AIC (permet une éventuelle comparaison plus tard) et il gère mieux la surdispersion (paramètre de dispersion proche de 1 : 1.217844). On retient ce modèle pour l'interprétation des résultats.

## Vérification de la qualité de l'ajustement

```{r}
# Diagnostics de résidus
simu_res <- simulateResiduals(fittedModel = mod.nb,n = 1000, plot = TRUE)
# Test de surdisperion résiduelle
testDispersion(simu_res)
# Test d'inflation de zéros 
testOutliers(simu_res, type = "bootstrap")
```

Les tests du diagnostic DHARMa sont significatifs, ils indiquent une légère surdispersion résiduelle (dispersion = 1.9567, p-value = 0.032) et moins de 1% de valeurs aberrantes (outliers at both margins = 53 / 5701 = 0,0093 ; p \< 2.2e-16).

La taille de l'échantillon augmente la sensibilité des tests, il vaut donc mieux se fier à l'interprétation visuelle. La distribution observée des résidus suit leur distribution attendue sans déviation majeure (QQ plot residuals), et il ne semble pas y avoir d’effet non-modélisé ou de non-linéarité claire (DHARMa residual vs. predicted).

Pour approfondir l'étude de l'ajustement du modèle, on pourrait aussi réaliser un test d’autocorrélation spatiale, un test d’effets non linéaires manquants, un test de colinéarité des variables, etc.

### Vérification de la colinéarité des variables explicatives

```{r}
mod_lm <- lm(nobs ~ popdensity_hab_per_km2 + elevation_m + main_clc, data = grille_data)
vif(mod_lm)
cor(grille_data[, c("popdensity_hab_per_km2", "elevation_m")])
```

Il ne semble pas y avoir de colinéarité des variables.

### Vérification de la présence de relations non linéaires dans le modèle

```{r}
# popdensity vs nobs 
ggplot(grille_data, aes(x = popdensity_hab_per_km2, y = nobs)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", color = "blue") +
  scale_x_continuous(trans = "log1p") +
  labs(title = "Relation non linéaire entre densité de population et nobs",
       x = "Densité de population (log1p)", y = "Nombre d'observations")
# elevation vs nobs
ggplot(grille_data, aes(x = elevation_m, y = nobs)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", color = "darkgreen") +
  scale_x_continuous(trans = "log1p") +
  labs(title = "Relation non linéaire entre altitude et nobs",
       x = "Altitude moyenne (log1p)", y = "Nombre d'observations")
```

Il ne semble pas non plus y avoir de forte non-linéarité évidente dans les relations univariées.

Par soucis de temps, on ne va pas pousser la démarche d'ajustement du modèle plus loin. On pourrait tester des modèles ayant des structures d'erreur différentes (ZINB, zero-inflated, etc) ou tester des transformations de variables, le tout en comparant les différents modèles à l'aide des AIC pour affiner l'ajustement du modèle. On considère que le modèle binomial négatif est correctement ajusté pour cette analyse.

## Interprétation des résultats du modèle binomial négatif

```{r}
tbl <- mod.nb |> gtsummary::tbl_regression(exponentiate = TRUE, intercept = TRUE)
flextable::save_as_docx(
  as_flex_table(tbl),
  path = here("figures/rapport_stage_M1_TMP", "tableau_glm.docx")
)
```

```{r}
# Extraire les résultats
results <- tidy(mod.nb, conf.int = TRUE) |>
  mutate(
    `Coefficient brut` = estimate,
    `Exponentielle du coefficient` = exp(estimate),
    `Erreur standard` = std.error,
    `Valeur p` = p.value
  ) |>
  select(
    Variable = term,
    `Coefficient brut`,
    `Exponentielle du coefficient`,
    `Erreur standard`,
    `Valeur p`
  )

# Renommer les variables si souhaité (optionnel)
results$Variable <- recode(results$Variable,
  "(Intercept)" = "Intercept",
  "popdensity_hab_per_km2" = "Densité de population",
  "elevation_m" = "Altitude",
  "main_clcCLC_agri_intensive" = "Milieux agricoles intensifs",
  "main_clcCLC_agri_seminat" = "Milieux agricoles semi-naturels",
  "main_clcCLC_forest" = "Forêts",
  "main_clcCLC_open_seminat" = "Milieux ouverts semi-naturels",
  "main_clcCLC_urban" = "Milieux urbains"
)

# Export au format Word
save_as_docx(
  flextable(results),
  path = here("figures/rapport_stage_M1_TMP", "tableau_glm_complet.docx")
)
```


Discussion : la proportion d'hab explique partiellement l'urbanisation donc les 2 variables sont liées ? faire un graph de densité de pop en fonction de clc. Même pour altitude, vérifier la corrélation entre les variables, graph ? test? terme d'interaction (interaction des effets entre 2 var explicatives) ? En tout cas en discuter pour l'interprétation des résultats
