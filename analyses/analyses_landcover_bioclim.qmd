---
title: "analyses_landcover_bioclim"
format:
  html:
    number-sections: true
    embed-resources: true
editor: visual
---

## Bibliothèques, chemins, chargement des données

```{r}
# Bibliothèques
#| warning: false
library(here)
library(data.table)
library(DT)
library(ggplot2)
library(rnaturalearth)
library(dplyr)
library(terra)
library(sf)

# Chemins
read_folder <- here("data/04_gis_info/data")
grid_folder <- here("data/03_grid")
gisdata_folder <- here("data/gis")
fig_folder <- here("figures/rapport_stage_M1_TMP")

# Chargement des données
dat <- readRDS(file.path(read_folder, "french_odonate_data.rds"))

# Filtrage des données entre 1990 et 2018 inclus
dat <- dat[eventDate >= as.IDate("1990-01-01") & eventDate <= as.IDate("2018-12-31")]

# Vérification
dim(dat)
summary(dat$eventDate)
```

# Evaluation du biais spatial en lien avec l'occupation des sols

Objectif : comparer les distributions attendue et observée des observations en fonction du mode d'occupation des sols en France métropolitaine.

Distribution attendue = distribution des classes d'occupation des sols sur l'ensemble du territoire français métropolitain

Distribution observée = distribution des classes d'occupation des sols au sein des données d'occurrence d'odonates

Données :

-   raster CLC2018 100m (France métropole + outre mer) :  https://land.copernicus.eu/en/products/corine-land-cover/clc2018

-   shapefile frontières France métropole : https://gadm.org/download_country.html

## Avec les classes CLC2018_landcover (niv. 3)

### Distribution attendue

```{r}
#| eval: false
# Importer le vecteur France métropole
fr <- vect(here(gisdata_folder,"gadm41_FRA_shp", "gadm41_FRA_0.shp"))
# Importer le raster CLC2018 100m
clc <- rast(here(gisdata_folder, "180451","Results","u2018_clc2018_v2020_20u1_raster100m","u2018_clc2018_v2020_20u1_raster100m","DATA","U2018_CLC2018_V2020_20u1.tif"))
# Reprojetter le vecteur pour le superposer au raster
fr_3035 <- project(fr, crs(clc))
# Couper le raster aux frontières de la métropole
clc_fr <- crop(clc, fr_3035, mask=TRUE)
# Récupérer les valeurs de chaque pixel et compter leur fréquence
clc_values <- values(clc_fr)
nclc <- table(clc_values)
# Calculer la proportion du territoire métropolitain couverte par chaque classe CLC
france_clc <- data.frame(
  "CLC2018_landcover"=levels(clc)[[1]]$LABEL3[levels(clc)[[1]]$Value%in%names(nclc)],
  "N_exp"=as.numeric(nclc),
  "perc_exp"=round(as.numeric(nclc)/sum(nclc)*100,3)
)
# Stocker le résultat dans un CSV
write.csv(france_clc, 
  here::here(grid_folder, "france_clc2018_100m.csv"), row.names=FALSE)
```

```{r}
#Afficher le résultat
clc_expected <- read.csv(file.path(grid_folder, "france_clc2018_100m.csv"))
clc_expected <- as.data.table(clc_expected)
clc_expected <- clc_expected[order(-N_exp)][!is.na(CLC2018_landcover) & CLC2018_landcover != "NODATA"]
clc_expected |> datatable()
# Barplot
ggplot(clc_expected) +
  geom_col(aes(x = N_exp, 
               y = reorder(CLC2018_landcover, N_exp)), fill = "darkorange") +
  xlab("Nombre d'occurrences") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 16) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Distribution observée

```{r}
# Nombre d'observations par classe CLC
clc_observed <- dat[, .N, by = CLC2018_landcover][, perc_obs := round(N / sum(N) * 100, 2)][order(-N)]
setnames(clc_observed, c("CLC2018_landcover", "N", "perc_obs"), c("CLC2018_landcover", "N_obs", "perc_obs"))
clc_observed |> datatable()
# Barplot
ggplot(clc_observed) +
  geom_col(aes(x = perc_obs, 
               y = reorder(CLC2018_landcover, perc_obs)), fill = "darkorange") +
  xlab("Proportion de chaque classe CLC dans les observations (%)") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 14) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Comparaison des distributions attendue et observée

```{r}
# Joindre les 2 distributions par les ID CLC
clc_comp <- clc_observed[clc_expected, on = .(CLC2018_landcover)][!is.na(N_obs) & !is.na(N_exp) & N_obs != 0]
clc_comp |> datatable()
# Table en format long pour pouvoir la représenter graphiquement
clc_long <- melt(clc_comp,
                 id.vars = "CLC2018_landcover",
                 measure.vars = c("perc_obs", "perc_exp"),
                 variable.name = "type",
                 value.name = "perc")
# Barplot
ggplot(clc_long[!is.na(perc)], aes(x = reorder(CLC2018_landcover, perc),
                     y = perc, 
                     fill = type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_fill_manual(values = c("perc_obs" = "darkorange", "perc_exp" = "steelblue")) +
  labs(x = NULL, y = "Proportion (%)", fill = "Type de donnée") +
  theme_minimal(base_size = 14) +
  theme(axis.text.y = element_text(size = 8, face = "italic"),
        legend.position = "top")
```

```{r}
# Test du Khi² de conformité 
khi2 <- chisq.test(x = clc_comp$N_obs, 
                        p = clc_comp$N_exp / sum(clc_comp$N_exp))
khi2
```

Le test du khi² de conformité indique une différence hautement significative entre la distribution observée des classes d’occupation du sol et leur distribution attendue (X² = 1385849, df = 40, p \< 2.2e-16). 

#### Contributions des classes au Khi²

```{r}
#Recalibrer N_exp à la somme des N_obs (sinon on fausse le calcul)
scaling_factor <- sum(clc_comp$N_obs) / sum(clc_comp$N_exp)
clc_comp[, N_exp_scaled := N_exp * scaling_factor]
# Calcul de la contribution des classes au khi² (en %)
clc_comp[, contrib_khi2 := (N_obs - N_exp_scaled)^2 / N_exp_scaled]
clc_comp[, contrib_khi2_perc := 100 * contrib_khi2 / sum(contrib_khi2)][order(-contrib_khi2)]
# Visualiser les contributions
ggplot(clc_comp, aes(x = contrib_khi2_perc, 
                      y = reorder(CLC2018_landcover, contrib_khi2_perc))) +
  geom_col(fill = "tomato") +
  labs(x = "Contribution au khi² (%)",
       title = "Contribution de chaque classe CLC au test du khi²") +
  theme_minimal(base_size = 14)

# Pour chaque classe, est-ce qu'elle est sur- ou sous-représentée dans les données ?
clc_comp[, deviation := khi2$stdres]
ggplot(clc_comp, aes(x = deviation, 
                      y = reorder(CLC2018_landcover, deviation))) +
  geom_col(aes(fill = deviation > 0)) +
  scale_fill_manual(values = c("steelblue", "tomato"), 
                    labels = c("Sous-représentée", "Sur-représentée")) +
  labs(x = "Résidu standardisé",
       title = "Sur- ou sous-représentation des classes CLC") +
  theme_minimal(base_size = 14)
```

## Etude du biais spatial d'occupation des sols (classes agrégées)

Pour l'agrégation des classes CLC, se référer à la page : https://land.copernicus.eu/content/corine-land-cover-nomenclature-guidelines/html/

### Distribution attendue

```{r}
# Création d'une nouvelle colonne de regroupement dans clc_expected
clc_expected[, landcover_groups := fcase(
  CLC2018_landcover %in% c("Continuous urban fabric", "Discontinuous urban fabric", "Industrial or commercial units", "Road and rail networks and associated land", "Port areas", "Airports", "Mineral extraction sites", "Dump sites", "Construction sites", "Green urban areas", "Sport and leisure facilities"),
  "Zones urbanisées et artificielles",

  CLC2018_landcover %in% c("Non-irrigated arable land", "Permanently irrigated land", "Rice fields", "Vineyards", "Fruit trees and berry plantations", "Olive groves"),
  "Zones agricoles intensives",

  CLC2018_landcover %in% c("Annual crops associated with permanent crops", "Complex cultivation patterns", "Land principally occupied by agriculture, with significant areas of natural vegetation", "Agro-forestry areas"),
  "Zones agricoles semi-naturelles",

  CLC2018_landcover %in% c("Broad-leaved forest", "Coniferous forest", "Mixed forest"),
  "Forêts",

  CLC2018_landcover %in% c("Pastures", "Natural grasslands", "Moors and heathland", "Sclerophyllous vegetation", "Transitional woodland-shrub"),
  "Milieux ouverts semi-naturels",
  
  CLC2018_landcover %in% c("Inland marshes", "Peat bogs",  "Water courses", "Water bodies", "Salt marshes", "Salines", "Intertidal flats"),
  "Milieux aquatiques",
  
  CLC2018_landcover %in% c("Coastal lagoons", "Estuaries", "Sea and ocean", "Beaches, dunes, sands", "Bare rocks", "Sparsely vegetated areas", "Burnt areas", "Glaciers and perpetual snow"),
  "Autres",

  default = "NODATA"
)]
clc_expected <- clc_expected[!is.na(CLC2018_landcover) & CLC2018_landcover != "NODATA"]

# Agréger les effectifs par landcover_groups
landcover_groups_expected <- clc_expected[, .(N_exp = sum(N_exp, na.rm = TRUE)), by = landcover_groups]
# Calculer les perc_exp par groupe
landcover_groups_expected[, perc_exp := 100 * N_exp / sum(N_exp)]
# Afficher le résultat
landcover_groups_expected |> datatable()
# Barplot
ggplot(landcover_groups_expected) +
  geom_col(aes(x = N_exp, 
               y = reorder(landcover_groups, N_exp)), fill = "darkorange") +
  xlab("Nombre d'occurrences") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 16) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Distribution observée 

```{r}
# Création d'une nouvelle colonne de regroupement dans dat
dat <- as.data.table(dat)
dat[, landcover_groups := fcase(
  CLC2018_landcover %in% c("Continuous urban fabric", "Discontinuous urban fabric", "Industrial or commercial units", "Road and rail networks and associated land", "Port areas", "Airports", "Mineral extraction sites", "Dump sites", "Construction sites", "Green urban areas", "Sport and leisure facilities"),
  "Zones urbanisées et artificielles",

  CLC2018_landcover %in% c("Non-irrigated arable land", "Permanently irrigated land", "Rice fields", "Vineyards", "Fruit trees and berry plantations", "Olive groves"),
  "Zones agricoles intensives",

  CLC2018_landcover %in% c("Annual crops associated with permanent crops", "Complex cultivation patterns", "Land principally occupied by agriculture, with significant areas of natural vegetation", "Agro-forestry areas"),
  "Zones agricoles semi-naturelles",

  CLC2018_landcover %in% c("Broad-leaved forest", "Coniferous forest", "Mixed forest"),
  "Forêts",

  CLC2018_landcover %in% c("Pastures", "Natural grasslands", "Moors and heathland", "Sclerophyllous vegetation", "Transitional woodland-shrub"),
  "Milieux ouverts semi-naturels",
  
  CLC2018_landcover %in% c("Inland marshes", "Peat bogs",  "Water courses", "Water bodies", "Salt marshes", "Salines", "Intertidal flats"),
  "Milieux aquatiques",
  
  CLC2018_landcover %in% c("Coastal lagoons", "Estuaries", "Sea and ocean", "Beaches, dunes, sands", "Bare rocks", "Sparsely vegetated areas", "Burnt areas", "Glaciers and perpetual snow"),
  "Autres",

  default = "NODATA"
)]

# Agréger les effectifs par landcover_groups
landcover_groups_observed <- dat[, .(N_obs = .N), by = landcover_groups]
# Calculer les perc_obs par groupe
landcover_groups_observed[, perc_obs := 100 * N_obs / sum(N_obs)]
landcover_groups_observed <- landcover_groups_observed[order(-N_obs)]
landcover_groups_observed |> datatable()

# Barplot
ggplot(landcover_groups_observed) +
  geom_col(aes(x = N_obs, 
               y = reorder(landcover_groups, N_obs)), fill = "darkorange") +
  xlab("Nombre d'occurrences") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 16) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Comparaison des distributions attendue et observée

```{r}
# Joindre les 2 distributions par les ID CLC
landcover_groups_comp <- landcover_groups_observed[landcover_groups_expected, on = .(landcover_groups)]
landcover_groups_comp |> datatable()
# Transformer la table pour pouvoir la représenter graphiquement : format large --> format long
lancover_groups_long <- melt(landcover_groups_comp,
                 id.vars = "landcover_groups",
                 measure.vars = c("perc_obs", "perc_exp"),
                 variable.name = "type",
                 value.name = "perc")
# Barplot
ggplot(lancover_groups_long[!is.na(perc)], aes(x = reorder(landcover_groups, perc),
                                               y = perc, 
                                               fill = type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_fill_manual(
    values = c("perc_obs" = "darkorange", "perc_exp" = "steelblue"),
    labels = c("perc_obs" = "Observée", "perc_exp" = "Attendue")
  ) +
  labs(x = NULL, y = "Proportion (%)", fill = "Distribution") +
  theme_minimal(base_size = 14) +
  theme(axis.text.y = element_text(size = 8, face = "italic"),
        legend.position = "top")

# Sauvegarder la figure (sans titre)
ggsave(file.path(fig_folder, "distribCLC.png"), width = 8, height = 6, dpi = 300)
```

```{r}
# Test du Khi² de conformité 
khi2_groups <- chisq.test(x = landcover_groups_comp$N_obs, 
                        p = landcover_groups_comp$N_exp / sum(landcover_groups_comp$N_exp))
khi2_groups
```

Le test du khi² de conformité indique une différence hautement significative entre la distribution observée des classes d’occupation du sol et leur distribution attendue (X² = 947328, df = 6, p \< 2.2e-16).

### Contributions des classes au Khi²

```{r}
#Recalibrer N_exp à la somme des N_obs (sinon on fausse le calcul)
scaling_factor <- sum(landcover_groups_comp$N_obs) / sum(landcover_groups_comp$N_exp)
landcover_groups_comp[, N_exp_scaled := N_exp * scaling_factor]
# Calcul de la contribution des classes au khi² (en %)
landcover_groups_comp[, contrib_khi2 := (N_obs - N_exp_scaled)^2 / N_exp_scaled]
landcover_groups_comp[, contrib_khi2_perc := 100 * contrib_khi2 / sum(contrib_khi2)][order(-contrib_khi2)]
# Visualiser les contributions
ggplot(landcover_groups_comp, aes(x = contrib_khi2_perc, 
                      y = reorder(landcover_groups, contrib_khi2_perc))) +
  geom_col(fill = "tomato") +
  labs(x = "Contribution au khi² (%)",
       title = "Contribution de chaque classe CLC au test du khi²") +
  theme_minimal(base_size = 14)

# Quels groupes sont sur- ou sous-représentés dans les données ?
landcover_groups_comp[, deviation := khi2_groups$stdres]
ggplot(landcover_groups_comp, aes(x = deviation, 
                                  y = reorder(landcover_groups, deviation))) +
  geom_col(aes(fill = deviation > 0)) +
  scale_fill_manual(
    values = c("FALSE" = "steelblue", "TRUE" = "tomato"),
    labels = c("FALSE" = "Sous-représentée", "TRUE" = "Sur-représentée"),
    name = "Classe"  
  ) +
  labs(x = "Résidu standardisé", y = NULL) +  
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_blank(),             
    legend.position = "top"
  )

# Sauvegarder la figure (sans titre)
ggsave(file.path(fig_folder, "resiCLC.png"), width = 8, height = 6, dpi = 300)
```







# Evaluation du biais spatial en lien avec les zones bioclimatiques

Objectif : comparer les distributions attendue et observée des observations en fonction de la zone bioclimatique en France métropolitaine.

Distribution attendue = distribution des zones sur l'ensemble du territoire français métropolitain

Distribution observée = distribution des zones au sein des données d'occurrence d'odonates


Données issues de Metzger et al. 2013 https://doi.org/10.1111/geb.12022

-   raster zones bioclimatiques mondiales : https://datashare.ed.ac.uk/handle/10283/3089

-   table de correspondance des zones bioclimatiques et leurs codes : fournie par Martin Jeanmougin (source ?)

-   shapefile frontières France métropole : https://gadm.org/download_country.html

### Distribution attendue

```{r}
#| eval: false
# Importer le vecteur France métropole
fr <- vect(here(gisdata_folder,"gadm41_FRA_shp", "gadm41_FRA_0.shp"))
# Importer le raster GEnSv3 et la table de correspondance
gens <- rast(here(gisdata_folder, "GEnSv3","GEnSv3","gens_v3.tif"))
meta_gens <- read.csv(here(grid_folder, "GEnS_v3_classification.csv"))
# Reprojetter le raster pour le superposer au vecteur
gens_3035 <- project(gens, crs(fr))
# Couper le raster aux frontières de la métropole
gens_fr <- crop(gens_3035, fr, mask=TRUE)
# Calcul des surfaces
area_gens <- expanse(gens_fr, unit="km", byValue=TRUE)
# Calculer la proportion du territoire métropolitain couverte par chaque zone bioclimatique
france_gens <- data.frame(
  "GEnS"=meta_gens$GEnS[match(area_gens$value, meta_gens$GEnS_seq)],
  "GEnZname"=meta_gens$GEnZname[match(area_gens$value, meta_gens$GEnS_seq)],
  "count"=as.numeric(area_gens$area),
  "perc"=round(as.numeric(area_gens$area)/sum(area_gens$area)*100,3)
)
# Stocker le résultat dans un CSV
write.csv(france_gens, 
  here::here(grid_folder, "france_GEnS_v3.csv"), row.names=FALSE)
```

```{r}
# Afficher le résultat
bioclim_exp <- read.csv(file.path(grid_folder, "france_GEnS_v3.csv"))
bioclim_exp <- as.data.table(bioclim_exp)
gens_exp <- bioclim_exp[, .(N_exp = sum(count),
  perc_exp = round(sum(count) / sum(bioclim_exp$count) * 100, 3)), by = GEnZname][order(-N_exp)]
setnames(gens_exp, "GEnZname", "GEnS_v3_bioclim") # pour plus tard
gens_exp |> datatable()
# Barplot
ggplot(gens_exp) +
  geom_col(aes(x = perc_exp, 
               y = reorder(GEnS_v3_bioclim, perc_exp)), fill = "darkorange") +
  xlab("Proportion du territoire occupée par chaque classe bioclimatique (%)") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 16) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Distribution observée

```{r}
# Agréger les effectifs par GEnS_v3_bioclim
gens_obs <- dat[, .(N_obs = .N), by = GEnS_v3_bioclim][!is.na(GEnS_v3_bioclim)]
# Calculer les perc_obs par GEnS_v3_bioclim
gens_obs[, perc_obs := 100 * N_obs / sum(N_obs)]
gens_obs <- gens_obs[order(-N_obs)]
gens_obs |> datatable()
# Barplot
ggplot(gens_obs) +
  geom_col(aes(x = perc_obs, 
               y = reorder(GEnS_v3_bioclim, perc_obs)), fill = "darkorange") +
  xlab("Part des observations dans chaque classe bioclimatique (%)") +
  scale_x_continuous(labels = label_number(big.mark = " ", decimal.mark = ",")) +
  theme_minimal(base_size = 16) +
  theme(axis.title.y = element_blank(),
        panel.grid.major.y = element_blank(),
        axis.text.y = element_text(face = "italic",
                                   size = 6))
```

### Comparaison des distributions attendue et observée

```{r}
# Joindre les 2 distributions par les labels des zones bioclimatiques
gens_comp <- gens_obs[gens_exp, on = .(GEnS_v3_bioclim)][!is.na(N_obs) & !is.na(N_exp)]
gens_comp |> datatable()

## Regrouper les classes rares (<1% dans les 2 distributions)
# Créer une colonne qui indique si la classe est "rare"
gens_comp[, rare := (perc_obs < 1) | (perc_exp < 1)]
# Séparer les classes rares des communes
rare_classes <- gens_comp[rare == TRUE]
# Somme des effectifs et pourcentages des classes rares
autres <- data.table(
  GEnS_v3_bioclim = "Autres",
  N_obs = sum(rare_classes$N_obs),
  N_exp = sum(rare_classes$N_exp),
  perc_obs = sum(rare_classes$perc_obs),
  perc_exp = sum(rare_classes$perc_exp)
)
# Garder uniquement les classes non rares
gens_comp <- gens_comp[rare == FALSE]
# Ajouter la ligne "Autres" puis trier
gens_comp <- rbind(gens_comp[, -"rare"], autres, fill = TRUE)
gens_comp <- gens_comp[order(-perc_exp)]

# Traduire les noms des classes qui m'intéressent pour le graphique 
gens_comp[, GEnS_v3_bioclim := as.character(GEnS_v3_bioclim)]
gens_comp[, GEnS_v3_bioclim := fifelse(GEnS_v3_bioclim == "J. Cool temperate and moist", "J. Tempéré frais et humide", fifelse(GEnS_v3_bioclim == "K. Warm temperate and mesic", "K. Tempéré chaud et mésique", fifelse(GEnS_v3_bioclim == "G. cold and mesic", "G. Froid et mésique", GEnS_v3_bioclim)))]

# Transformer la table pour pouvoir la représenter graphiquement : format large --> format long
gens_long <- melt(gens_comp,
                 id.vars = "GEnS_v3_bioclim",
                 measure.vars = c("perc_obs", "perc_exp"),
                 variable.name = "type",
                 value.name = "perc")

# Barplot
ggplot(gens_long[!is.na(perc)], aes(x = reorder(GEnS_v3_bioclim, perc),
                                              y = perc, 
                                              fill = type)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_fill_manual(
    values = c("perc_obs" = "darkorange", "perc_exp" = "steelblue"),
    labels = c("perc_obs" = "Observée", "perc_exp" = "Attendue")
  ) +
  labs(x = NULL, y = "Proportion (%)", fill = "Distribution") +
  theme_minimal(base_size = 14) +
  theme(axis.text.y = element_text(size = 8, face = "italic"),
        legend.position = "top")

# Sauvegarder la figure (sans titre)
ggsave(file.path(fig_folder, "distribGENS.png"), width = 8, height = 6, dpi = 300)
```

```{r}
# Test du Khi² de conformité 
khi2_gens <- chisq.test(x = gens_comp$N_obs, 
                        p = gens_comp$N_exp / sum(gens_comp$N_exp))
khi2_gens
```

Le test du khi² de conformité indique une différence significative entre la distribution observée des zones bioclimatiques et leur distribution attendue (X² = 41472, df = 3, p \< 2.2e-16).

### Contributions des classes au Khi²

```{r}
#Recalibrer N_exp à la somme des N_obs (sinon on fausse le calcul)
scaling_factor <- sum(gens_comp$N_obs) / sum(gens_comp$N_exp)
gens_comp[, N_exp_scaled := N_exp * scaling_factor]

# Calcul de la contribution des classes au khi² (en %)
gens_comp[, contrib_khi2 := (N_obs - N_exp_scaled)^2 / N_exp_scaled]
gens_comp[, contrib_khi2_perc := 100 * contrib_khi2 / sum(contrib_khi2)][order(-contrib_khi2)]

# Visualiser les contributions
ggplot(gens_comp, aes(x = contrib_khi2_perc, 
                      y = reorder(GEnS_v3_bioclim, contrib_khi2_perc))) +
  geom_col(fill = "tomato") +
  labs(x = "Contribution au khi² (%)",
       title = "Contribution de chaque zones bioclim au test du khi²") +
  theme_minimal(base_size = 14)

# Pour chaque classe, est-ce qu'elle est sur- ou sous-représentée dans les données ?
gens_comp[, deviation := khi2_gens$stdres]
ggplot(gens_comp, aes(x = deviation, 
                                      y = reorder(GEnS_v3_bioclim, deviation))) +
  geom_col(aes(fill = deviation > 0)) +
  scale_fill_manual(
    values = c("FALSE" = "steelblue", "TRUE" = "tomato"),
    labels = c("FALSE" = "Sous-représentée", "TRUE" = "Sur-représentée"),
    name = "Classe"
  ) +
  labs(x = "Résidu standardisé", y = NULL) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_blank(),
    legend.position = "top"
  )

# Sauvegarder la figure (sans titre)
ggsave(file.path(fig_folder, "resiGENS.png"), width = 8, height = 6, dpi = 300)
```
