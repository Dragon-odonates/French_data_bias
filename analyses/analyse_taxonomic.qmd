---
title: "analyse_taxonomic"
format:
  html:
    number-sections: true
    embed-resources: true
editor: visual
---

# Bibliothèques, chemins, chargement des données

```{r}
# Bibliothèques
#| warning: false
library(here)
library(data.table)
library(ggplot2)
library(gt)

library(lubridate)

# Chemins
read_folder <- here("data/04_gis_info/data")
grid_folder <- here("data/03_grid")
gisdata_folder <- here("data/gis")
fig_folder <- here("figures/taxo")

# Chargement des données
dat <- readRDS(file.path(read_folder, "french_odonate_data.rds"))
```
# Traitement des données pour l'analyse du biais taxonomique

## Correction des noms d'espèces pour éviter les synonymes

```{r}
# Charger le fichier Excel de correspondance des noms d'espèces en renommant la colonne scientificName en correctedName
taxo_corrections <- fread(file.path(grid_folder, "france_taxo.csv"))[, .(verbatimName, correctedName = scientificName)]

# Joindre les corrections aux données odonates
dat <- merge(dat, taxo_corrections, by = "verbatimName", all.x = TRUE)

# Remplacer scientificName par correctedName si disponible
dat[, scientificName := ifelse(!is.na(correctedName), correctedName, scientificName)]

# Nettoyage : supprimer la colonne temporaire correctedName + supprimer les identifications de niveau taxonomique différent de l'espèce
dat[, correctedName := NULL]
dat <- dat[taxonRank == "SPECIES"]

# Vérification
dat[, .N, by = scientificName][order(-N)]
dat[, .N, by = verbatimName][order(-N)]
```

## Nettoyage données sans région 

```{r}
# Filtrer les données sans région affiliée
dat <- dat[!is.na(region)]

# Séparer les jeux de données steli et atlas
dat_steli <- dat[source=="STELI"]
dat_atlas <- dat[source=="atlas"]

# Lister toutes les régions uniques et leurs effectifs
dat_steli[, .N, by = region][order(-N)]
dat_atlas[, .N, by = region][order(-N)]
```

## Création d'un ID session ATLAS

```{r}
# Vérifier les valeurs manquantes ou peu informative dans les métadonnées 
dat_atlas[, .(
  n_total = .N,
  n_NA_eventDate = sum(is.na(eventDate)),
  n_NA_recordedBy = sum(is.na(recordedBy) | recordedBy %in% c("Anon", "", NA)),
  n_NA_coords = sum(is.na(decimalLongitude) | is.na(decimalLatitude))
)]

# Nettoyer recordedBy
dat[, recordedBy_clean := tolower(trimws(recordedBy))]
dat[is.na(recordedBy_clean) | recordedBy_clean %in% c("anon", ""), recordedBy_clean := "unknown"]

# Arrondir les coordonnées à 100 m
dat[, `:=`(
  x_round = round(x_ETRS89_LAEA, -2),
  y_round = round(y_ETRS89_LAEA, -2)
)]

# Créer ID uniquement pour sessions ATLAS
dat[source == "atlas", id_ses_atlas := ifelse(
  recordedBy_clean == "unknown",
  paste(eventDate, x_round, y_round, sep = "_"),
  paste(eventDate, recordedBy_clean, x_round, y_round, sep = "_")
)]

# Vérification : résumé des sessions créées
cat("Nombre total de sessions atlas recréées :", dat[source == "atlas", uniqueN(id_ses_atlas)], "\n")
cat("Nombre d'observations sans id_ses_atlas :", dat[source == "atlas" & is.na(id_ses_atlas), .N], "\n")

# Histogramme nombre d'observations par session
session_obs_counts <- dat[source == "atlas", .N, by = id_ses_atlas]
ggplot(session_obs_counts, aes(x = N)) +
  geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
  scale_x_continuous() +
  labs(
    title = "Distribution du nombre d'observations par session (Atlas)",
    x = "Nombre d'observations",
    y = "Nombre de sessions"
  ) + xlim(0,20) +
  theme_minimal(base_size = 14)
```

# Choix des fenêtres spatio-temporelles d'étude

```{r}
# Tableau de décision basé sur le critère de > 10 sites et > 50 sessions (en format long)

# Comptage par région et année
tab_sites <- dat_steli[, .(n_sites = uniqueN(id_site)), by = .(region, year = year(eventDate))]
tab_sessions <- dat_steli[, .(n_sessions = uniqueN(id_ses)), by = .(region, year = year(eventDate))]

# Fusionner les deux
tab_combined <- merge(tab_sites, tab_sessions, by = c("region", "year"), all = TRUE)

# Créer indicateur pour surbrillance
tab_combined[, highlight := (n_sites >= 10 & n_sessions >= 50)]

# Tableau GT
gt_table <- gt(tab_combined) %>%
  tab_header(title = "Nombre de sites et de sessions STELI par région et par an") %>%
  data_color(
    columns = c(n_sites, n_sessions),
    rows = highlight == TRUE,
    colors = function(x) "lightgreen"  # ✅ Couleur verte forcée
  ) %>%
  cols_label(
    region = "Région",
    year = "Année",
    n_sites = "Sites",
    n_sessions = "Sessions"
  ) %>%
  cols_hide(columns = highlight)  # ✅ Masquer la colonne highlight
gt_table
```


# Comparer la distribution des espèces entre les données STELI et ATLAS (Groupes Sud/Nord)

## Groupe Sud 1 : Nouvelle-Aquitaine + Occitanie (2016-2017)

```{r}
# Filtrage
dat_s1 <- dat[region %in% c("Nouvelle-Aquitaine", "Occitanie") & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Table croisée espèces × source
table_species_s1 <- dat_s1[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Supprimer les espèces absentes des deux jeux de données
table_species_s1 <- table_species_s1[atlas + STELI > 0]

# Créer la table de contingence
mat_s1 <- as.matrix(table_species_s1[, .(atlas, STELI)])
rownames(mat_s1) <- table_species_s1$species_name

# Test du chi² d’indépendance
test_chi2_s1 <- chisq.test(mat_s1)
test_chi2_s1
```

```{r}
# Résidus standardisés
residus_s1 <- test_chi2_s1$stdres
table_species_s1[, `:=`(residus_atlas = residus_s1[, "atlas"])]
table_species_s1[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_s1 <- table_species_s1[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation des espèces dans l'atlas vs steli
ggplot(top_bias_s1, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(
    x = NULL, y = "Résidu standardisé (ATLAS)",
    fill = "Biais de représentation",
    title = "Espèces les plus biaisées dans ATLAS (Nouvelle-Aquitaine + Occitanie)"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.y = element_text(size = 8, face = "italic"),
    legend.position = "top"
  )

# Calcul des proportions globales des espèces
table_species_s1[, `:=`(
  prop_atlas = atlas / sum(atlas),
  prop_steli = STELI / sum(STELI)
)]

# Format long
table_prop_long_s1 <- melt(
  table_species_s1[scientificName %in% top_bias_s1$scientificName, 
                   .(scientificName, prop_atlas, prop_steli)],
  id.vars = "scientificName",
  variable.name = "source", value.name = "proportion"
)
table_prop_long_s1[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique proportions
ggplot(table_prop_long_s1, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source",
       title = "Distribution relative des observations par espèce (Nouvelle-Aquitaine + Occitanie, 2016-2017") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"),
        legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_s1 <- dat[source == "STELI" & region %in% c("Nouvelle-Aquitaine", "Occitanie") & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Nombre de sessions par mois et par année
dat_steli_s1[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_s1[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Nouvelle Aquitaine + Occitanie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

#Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_steli_s1[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Nouvelle Aquitaine + Occitanie, 2016-2017)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_s1 <- dat[source == "atlas" & region %in% c("Nouvelle-Aquitaine", "Occitanie") & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_s1[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_s1[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Nouvelle Aquitaine + Occitanie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

#Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_s1[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Nouvelle Aquitaine + Occitanie, 2016-2017)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

## Groupe Nord 2 : Hauts-de-France + Normandie (2012-2013)

```{r}
# Filtrage
dat_n2 <- dat[region %in% c("Hauts-de-France", "Normandie") & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Table croisée espèces × source
table_species_n2 <- dat_n2[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Supprimer les espèces absentes des deux jeux de données
table_species_n2 <- table_species_n2[atlas + STELI > 0]

# Créer la table de contingence
mat_n2 <- as.matrix(table_species_n2[, .(atlas, STELI)])
rownames(mat_n2) <- table_species_n2$species_name

# Test du chi² d’indépendance
test_chi2_n2 <- chisq.test(mat_n2)
test_chi2_n2
```

```{r}
# Résidus standardisés
residus_n2 <- test_chi2_n2$stdres
table_species_n2[, `:=`(residus_atlas = residus_n2[, "atlas"])]
table_species_n2[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_n2 <- table_species_n2[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation des espèces dans l'atlas vs steli
ggplot(top_bias_n2, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation", title = "Espèces les plus biaisées dans ATLAS (Hauts-de-France + Normandie, 2012-2013)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Calcul des proportions globales des espèces
table_species_n2[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long
table_prop_long_n2 <- melt(
  table_species_n2[scientificName %in% top_bias_n2$scientificName, .(scientificName, prop_atlas, prop_steli)],
  id.vars = "scientificName", variable.name = "source", value.name = "proportion"
)
table_prop_long_n2[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique proportions
ggplot(table_prop_long_n2, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source", title = "Distribution relative des observations par espèce (Hauts-de-France + Normandie, 2012-2013)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_n2 <- dat[source == "STELI" & region %in% c("Hauts-de-France", "Normandie") & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Nombre de sessions par mois et par année
dat_steli_n2[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_n2[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Hauts-de-France + Normandie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

#Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_steli_n2[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Hauts-de-France + Normandie, 2012-2013)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_n2 <- dat[source == "atlas" & region %in% c("Hauts-de-France", "Normandie") & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_n2[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_n2[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Hauts-de-France + Normandie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_n2[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Hauts-de-France + Normandie, 2012–2013)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```



# Comparer la distribution des espèces entre les données STELI et ATLAS (Régions seules)

## Hauts-de-France (2011-2016)

```{r}
# Filtrage
dat_hdf <- dat[region %in% c("Hauts-de-France") & eventDate >= as.IDate("2011-01-01") & eventDate <= as.IDate("2016-12-31")]

# Table croisée espèces × source
table_species_hdf <- dat_hdf[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Supprimer les espèces absentes des deux jeux de données
table_species_hdf <- table_species_hdf[atlas + STELI > 0]

# Créer la table de contingence
mat_hdf <- as.matrix(table_species_hdf[, .(atlas, STELI)])
rownames(mat_hdf) <- table_species_hdf$scientificName

# Test du chi² d’indépendance
test_chi2_hdf <- chisq.test(mat_hdf)
test_chi2_hdf
```

```{r}
# Résidus standardisés
residus_hdf <- test_chi2_hdf$stdres
table_species_hdf[, `:=`(residus_atlas = residus_hdf[, "atlas"])]
table_species_hdf[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_hdf <- table_species_hdf[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation
ggplot(top_bias_hdf, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() + coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation",
       title = "Espèces les plus biaisées dans ATLAS (Hauts-de-France, 2011-2016)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Proportions globales
table_species_hdf[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long
table_prop_long_hdf <- melt(
  table_species_hdf[scientificName %in% top_bias_hdf$scientificName, .(scientificName, prop_atlas, prop_steli)],
  id.vars = "scientificName", variable.name = "source", value.name = "proportion"
)
table_prop_long_hdf[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique proportions
ggplot(table_prop_long_hdf, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") + coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source",
       title = "Distribution relative des observations par espèce (Hauts-de-France, 2011-2016)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_hdf <- dat[source == "STELI" & region == "Hauts-de-France" & eventDate >= as.IDate("2011-01-01") & eventDate <= as.IDate("2016-12-31")]

# Nombre de sessions par mois et par année
dat_steli_hdf[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_hdf[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Hauts-de-France)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

#Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_steli_hdf[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Hauts-de-France, 2011-2016)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage Atlas au cours des mois

```{r}
# Filtrage
dat_atlas_hdf <- dat[source == "atlas" & region == "Hauts-de-France" & eventDate >= as.IDate("2011-01-01") & eventDate <= as.IDate("2016-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_hdf[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_hdf[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Hauts-de-France)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_hdf[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Hauts-de-France, 2011-2016)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

## Normandie (2012–2013)

```{r}
# Filtrage
dat_nor <- dat[region %in% c("Normandie") & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Table croisée espèces × source
table_species_nor <- dat_nor[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Supprimer les espèces absentes des deux jeux de données
table_species_nor <- table_species_nor[atlas + STELI > 0]

# Créer la table de contingence
mat_nor <- as.matrix(table_species_nor[, .(atlas, STELI)])
rownames(mat_nor) <- table_species_nor$scientificName

# Test du chi² d’indépendance
test_chi2_nor <- chisq.test(mat_nor)
test_chi2_nor
```

```{r}
# Résidus standardisés
residus_nor <- test_chi2_nor$stdres
table_species_nor[, `:=`(residus_atlas = residus_nor[, "atlas"])]
table_species_nor[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_nor <- table_species_nor[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation des espèces dans l'atlas vs steli
ggplot(top_bias_nor, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() + coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation", title = "Espèces les plus biaisées dans ATLAS (Normandie, 2012-2013)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Calcul des proportions globales des espèces
table_species_nor[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long
table_prop_long_nor <- melt(table_species_nor[scientificName %in% top_bias_nor$scientificName, .(scientificName, prop_atlas, prop_steli)],
                            id.vars = "scientificName", variable.name = "source", value.name = "proportion")
table_prop_long_nor[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique proportions
ggplot(table_prop_long_nor, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") + coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source", title = "Distribution relative des observations par espèce (Normandie, 2012-2013)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_nor <- dat[source == "STELI" & region == "Normandie" & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Nombre de sessions par mois et par année
dat_steli_nor[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_nor[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Normandie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles
sessions_monthly <- dat_steli_nor[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Normandie, 2012-2013)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_norm <- dat[source == "atlas" & region == "Normandie" & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Nombre d'observations par mois et par année
dat_atlas_norm[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
obs_per_month <- dat_atlas_norm[, .N, by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(obs_per_month, aes(x = month, y = factor(year), fill = N)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre d'observations ATLAS par mois et par année (Normandie)",
       x = "Mois", y = "Année", fill = "Observations") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
obs_monthly <- dat_atlas_norm[, .N, by = month]
ggplot(obs_monthly, aes(x = month, y = N)) +
  geom_col(fill = "steelblue") +
  labs(title = "Observations ATLAS par mois (Normandie, 2012-2013)",
       x = "Mois", y = "Nombre total d'observations") +
  theme_minimal(base_size = 14)
```

```{r}
# Filtrage
dat_atlas_nor <- dat[source == "atlas" & region == "Normandie" & eventDate >= as.IDate("2012-01-01") & eventDate <= as.IDate("2013-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_nor[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_nor[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Normandie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_nor[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Normandie, 2012–2013)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```


## Grand Est (2015-2016)

```{r}
# Filtrage
dat_ge <- dat[region %in% c("Grand Est") & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2016-12-31")]

# Table croisée espèces × source
table_species_ge <- dat_ge[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Supprimer les espèces absentes des deux jeux de données
table_species_ge <- table_species_ge[atlas + STELI > 0]

# Créer la table de contingence
mat_ge <- as.matrix(table_species_ge[, .(atlas, STELI)])
rownames(mat_ge) <- table_species_ge$scientificName

# Test du chi² d’indépendance
test_chi2_ge <- chisq.test(mat_ge)
test_chi2_ge
```

```{r}
# Résidus standardisés
residus_ge <- test_chi2_ge$stdres
table_species_ge[, `:=`(residus_atlas = residus_ge[, "atlas"])]
table_species_ge[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_ge <- table_species_ge[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation des espèces dans l'atlas vs steli
ggplot(top_bias_ge, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() + coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation", title = "Espèces les plus biaisées dans ATLAS (Grand Est, 2015-2016)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Calcul des proportions globales des espèces
table_species_ge[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long
table_prop_long_ge <- melt(table_species_ge[scientificName %in% top_bias_ge$scientificName, .(scientificName, prop_atlas, prop_steli)],
                            id.vars = "scientificName", variable.name = "source", value.name = "proportion")
table_prop_long_ge[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique proportions
ggplot(table_prop_long_ge, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") + coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source", title = "Distribution relative des observations par espèce (Grand Est, 2015-2016)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_ge <- dat[source == "STELI" & region %in% c("Grand Est") & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2016-12-31")]

# Nombre de sessions par mois et par année
dat_steli_ge[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_ge[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Grand Est)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles
sessions_monthly <- dat_steli_ge[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Grand Est, 2015-2016)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_ge <- dat[source == "atlas" & region == "Grand Est" & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2016-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_ge[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_ge[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Grand Est)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_ge[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Grand Est, 2015–2016)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

## Nouvelle-Aquitaine (2015–2020)

```{r}
# Filtrage des données
dat_naq <- dat[region %in% c("Nouvelle-Aquitaine") & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2020-12-31")]

# Table croisée espèces × source
table_species_naq <- dat_naq[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Suppression des espèces absentes des deux jeux
table_species_naq <- table_species_naq[atlas + STELI > 0]

# Table de contingence
mat_naq <- as.matrix(table_species_naq[, .(atlas, STELI)])
rownames(mat_naq) <- table_species_naq$species_name

# Test du chi²
test_chi2_naq <- chisq.test(mat_naq)
test_chi2_naq
```

```{r}
# Résidus standardisés
residus_naq <- test_chi2_naq$stdres
table_species_naq[, `:=`(residus_atlas = residus_naq[, "atlas"])]
table_species_naq[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_naq <- table_species_naq[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation
ggplot(top_bias_naq, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation", title = "Espèces les plus biaisées dans ATLAS (Nouvelle-Aquitaine, 2015-2020)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Calcul des proportions globales
table_species_naq[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long pour graphique
table_prop_long_naq <- melt(
  table_species_naq[scientificName %in% top_bias_naq$scientificName, .(scientificName, prop_atlas, prop_steli)],
  id.vars = "scientificName", variable.name = "source", value.name = "proportion"
)
table_prop_long_naq[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique des proportions
ggplot(table_prop_long_naq, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source", title = "Distribution relative des observations par espèce (Nouvelle-Aquitaine, 2015-2020)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_naq <- dat[source == "STELI" & region == "Nouvelle-Aquitaine" & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2020-12-31")]

# Nombre de sessions par mois et par année
dat_steli_naq[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_naq[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Heatmap
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Nouvelle-Aquitaine)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles
sessions_monthly <- dat_steli_naq[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Nouvelle-Aquitaine, 2015-2020)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_naq <- dat[source == "atlas" & region == "Nouvelle-Aquitaine" & eventDate >= as.IDate("2015-01-01") & eventDate <= as.IDate("2020-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_naq[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_naq[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Nouvelle-Aquitaine)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_naq[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (Nouvelle-Aquitaine, 2015–2020)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

## Occitanie (2016–2017)

```{r}
# Filtrage des données
dat_occ <- dat[region %in% c("Occitanie") & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Table croisée espèces × source
table_species_occ <- dat_occ[, .N, by = .(scientificName, source)] |>
  dcast(scientificName ~ source, value.var = "N", fill = 0)

# Suppression des espèces absentes des deux jeux
table_species_occ <- table_species_occ[atlas + STELI > 0]

# Table de contingence
mat_occ <- as.matrix(table_species_occ[, .(atlas, STELI)])
rownames(mat_occ) <- table_species_occ$species_name

# Test du chi²
test_chi2_occ <- chisq.test(mat_occ)
test_chi2_occ
```

```{r}
# Résidus standardisés
residus_occ <- test_chi2_occ$stdres
table_species_occ[, `:=`(residus_atlas = residus_occ[, "atlas"])]
table_species_occ[, deviation := ifelse(residus_atlas > 0, "Sur-représentée", "Sous-représentée")]

# Top 30 des espèces les plus biaisées
top_bias_occ <- table_species_occ[order(-abs(residus_atlas))][1:30]

# Graphique sur-/sous-représentation
ggplot(top_bias_occ, aes(x = reorder(scientificName, abs(residus_atlas)), y = residus_atlas, fill = deviation)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = c("Sur-représentée" = "tomato", "Sous-représentée" = "steelblue")) +
  labs(x = NULL, y = "Résidu standardisé (ATLAS)", fill = "Biais de représentation", title = "Espèces les plus biaisées dans ATLAS (Occitanie, 2016-2017)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 8, face = "italic"), legend.position = "top")

# Calcul des proportions globales
table_species_occ[, `:=`(prop_atlas = atlas / sum(atlas), prop_steli = STELI / sum(STELI))]

# Format long pour graphique
table_prop_long_occ <- melt(
  table_species_occ[scientificName %in% top_bias_occ$scientificName, .(scientificName, prop_atlas, prop_steli)],
  id.vars = "scientificName", variable.name = "source", value.name = "proportion"
)
table_prop_long_occ[, source := fifelse(source == "prop_atlas", "ATLAS", "STELI")]

# Graphique des proportions
ggplot(table_prop_long_occ, aes(x = reorder(scientificName, proportion), y = proportion, fill = source)) +
  geom_col(position = "dodge") +
  coord_flip() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
  scale_fill_manual(values = c("ATLAS" = "darkorange", "STELI" = "steelblue")) +
  labs(x = NULL, y = "Proportion des observations", fill = "Source", title = "Distribution relative des observations par espèce (Occitanie, 2016-2017)") +
  theme_minimal(base_size = 13) +
  theme(axis.text.y = element_text(size = 7, face = "italic"), legend.position = "top")
```

### Evolution de l'effort d'échantillonnage STELI au cours des mois

```{r}
# Filtrage
dat_steli_occ <- dat[source == "STELI" & region == "Occitanie" & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Nombre de sessions par mois et par année
dat_steli_occ[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_steli_occ[, .(n_sessions = uniqueN(id_ses)), by = .(year, month)]

# Heatmap
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions STELI par mois et par année (Occitanie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles
sessions_monthly <- dat_steli_occ[, .(n_sessions = uniqueN(id_ses)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions STELI par mois (Occitanie, 2016-2017)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```

### Evolution de l'effort d'échantillonnage ATLAS au cours des mois

```{r}
# Filtrage
dat_atlas_occ <- dat[source == "atlas" & region == "Occitanie" & eventDate >= as.IDate("2016-01-01") & eventDate <= as.IDate("2017-12-31")]

# Nombre de sessions par mois et par année
dat_atlas_occ[, `:=`(year = year(eventDate), month = month(eventDate, label = TRUE, abbr = TRUE))]
sessions_per_month <- dat_atlas_occ[, .(n_sessions = uniqueN(id_ses_atlas)), by = .(year, month)]

# Visualisation : heatmap année × mois
ggplot(sessions_per_month, aes(x = month, y = factor(year), fill = n_sessions)) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Nombre de sessions ATLAS par mois et par année (Occitanie)",
       x = "Mois", y = "Année", fill = "Sessions") +
  theme_minimal(base_size = 14)

# Séries mensuelles (somme sur toutes les années)
sessions_monthly <- dat_atlas_occ[, .(n_sessions = uniqueN(id_ses_atlas)), by = month]
ggplot(sessions_monthly, aes(x = month, y = n_sessions)) +
  geom_col(fill = "steelblue") +
  labs(title = "Sessions ATLAS par mois (2016–2017, Occitanie)",
       x = "Mois", y = "Nombre total de sessions") +
  theme_minimal(base_size = 14)
```
